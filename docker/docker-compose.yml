---
version: '3.8'

services:
  actual_server:
    container_name: budget
    image: docker.io/actualbudget/actual-server:latest
    networks:
      - proxy
    ports:
      - 5006:5006
    restart: unless-stopped
    volumes:
      - ./actual/data:/data

  calibre-web:
    container_name: calibre-web
    image: lscr.io/linuxserver/calibre-web:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
        #- OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - ./calibre-web/config:/config
      - ./calibre-web/books:/books
    restart: unless-stopped
    ports:
      - 8083:8083
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calibre-web.entrypoints=https"
      - "traefik.http.routers.calibre-web.rule=Host(`books.lan.thenickstrick.com`)"
      - "traefik.http.routers.calibre-web.tls=true"
      - "traefik.http.routers.calibre-web.service=calibre-web"
      - "traefik.http.services.calibre-web.loadbalancer.server.port=8083"
    networks:
      - proxy

  dashy:
    image: lissy93/dashy
    container_name: dashy
    volumes:
      - ./app/user-data/conf.yml:/app/user-data/conf.yml
    ports:
      - 4000:8080
    # Set any environmental variables
    environment:
      - NODE_ENV=production
    # Specify your user ID and group ID. You can find this by running `id -u` and `id -g`
    #  - UID=1000
    #  - GID=1000
    # Specify restart policy
    restart: unless-stopped
    # Configure healthchecks
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ./heimdall/config:/config
    ports:
      - 8080:80
      - 8443:443
    restart: unless-stopped
    networks:
      - proxy

  traefik:
    container_name: traefik
    image: traefik:v3.0
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
      # - 443:443/tcp # Uncomment if you want HTTP3
      # - 443:443/udp # Uncomment if you want HTTP3
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/cf_api_token # note using _FILE for docker secrets
      # CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN} # if using .env
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    secrets:
      - cf_api_token
    env_file: .env # use .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/data/traefik.yml:/traefik.yml:ro
      - ./traefik/data/acme.json:/acme.json
      - ./traefik/data/config.yml:/config.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`nexus-traefik.lan.thenickstrick.com`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`nexus-traefik.lan.thenickstrick.com`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=lan.thenickstrick.com"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.lan.thenickstrick.com"
      - "traefik.http.routers.traefik-secure.service=api@internal"

networks:
  proxy:
    external: true

secrets:
  cf_api_token:
    file: ./traefik/cf_api_token.txt
